{"version":3,"sources":["api.js","components/Post/index.jsx","components/PostsList/reducer.js","components/PostsList/index.jsx","components/App/index.jsx","reportWebVitals.js","index.js"],"names":["API_URL","getPosts","start","a","limit","url","axios","Post","post","className","title","body","LOADING_START","LOADING_DONE","LOADING_FAIL","reducer","state","action","type","payload","loading","PostsList","useReducer","total","Infinity","posts","dispatch","loadMorePosts","useCallback","then","res","headers","data","catch","err","console","log","handleVisible","visible","directionY","useEffect","href","map","id","length","onVisibilityChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEMA,EAAU,uCAEHC,EAAQ,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DAAcC,EAAd,+BAAsB,GACtCC,EADgB,UACPL,EADO,yBACiBE,EADjB,mBACiCE,GADjC,kBAGfE,IAAMD,IAHS,2CAAH,sDCUNE,G,MAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACZC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACf,OACE,sBAAKF,UAAS,UAAKA,EAAL,SAAd,UACE,oBAAIA,UAAU,cAAd,SAA6BC,IAC7B,mBAAGD,UAAU,aAAb,SAA2BE,S,eCTpBC,EAAgB,gBAChBC,EAAe,eACfC,EAAe,eAEfC,EAAU,SAACC,EAAOC,GAAY,IACjCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKN,EACH,OAAO,2BAAKI,GAAZ,IAAmBI,SAAS,IAE9B,KAAKP,EACH,OAAO,2BAAKM,GAAZ,IAAqBC,SAAS,IAEhC,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBI,SAAS,IAE9B,QACE,OAAOJ,ICmDEK,EA3DG,WAAO,IAAD,EACIC,qBAAWP,EAAS,CAC5CQ,MAAOC,IACPC,MAAO,GACPvB,MAAO,EACPkB,SAAS,IALW,mBACfJ,EADe,KACRU,EADQ,KAOdxB,EAAiCc,EAAjCd,MAAOuB,EAA0BT,EAA1BS,MAAOL,EAAmBJ,EAAnBI,QAASG,EAAUP,EAAVO,MAEzBI,EAAgBC,uBAAY,WAChCF,EAAS,CAAER,KAAMN,IAEjBX,EAASC,EAdO,IAeb2B,MAAK,SAAAC,GACJJ,EAAS,CACPR,KAAML,EACNM,QAAS,CACPI,OAAQO,EAAIC,QAAQ,iBACpBN,MAAM,GAAD,mBAAMA,GAAN,YAAgBK,EAAIE,OACzB9B,MAAOA,EArBC,SAyBb+B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZR,EAAS,CAAER,KAAMJ,SAGpB,CAACZ,EAAOuB,IAELY,EAAgBT,uBAAY,YAA8B,IAA3BU,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YACxCnB,GAAYkB,GAA0B,OAAfC,GAE3BZ,MACC,CAACA,EAAeP,IAOnB,OALAoB,qBAAU,WACRb,MAEC,IAGD,sBAAKlB,UAAU,aAAf,UACE,yUACA,wHACmB,mBAAGgC,KAAK,sCAAR,gCAEnB,6MACkC,mBAAGA,KAAK,wDAAR,6EAEjChB,EAAMiB,KAAI,SAAAlC,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,UAAU,oBAA/BD,EAAKmC,OAEjBvB,GAAW,aACXG,EAAQE,EAAMmB,QAAU,cAAC,IAAD,CAAoBC,mBAAoBR,QCpDxDS,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1cc1606b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = async (start, limit = 10) => {\n  const url = `${API_URL}/posts?_start=${start}&_limit=${limit}`;\n\n  return axios(url);\n};\n","import React from 'react';\n\nimport './index.css';\n\nconst Post = ({ post, className }) => {\n  const { title, body } = post;\n  return (\n    <div className={`${className} post`}>\n      <h3 className=\"post__title\">{title}</h3>\n      <p className=\"post__body\">{body}</p>\n    </div>\n  );\n};\n\nexport default Post;\n","export const LOADING_START = 'LOADING_START';\nexport const LOADING_DONE = 'LOADING_DONE';\nexport const LOADING_FAIL = 'LOADING_FAIL';\n\nexport const reducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOADING_START:\n      return { ...state, loading: true };\n\n    case LOADING_DONE:\n      return { ...payload, loading: false };\n\n    case LOADING_FAIL:\n      return { ...state, loading: false };\n\n    default:\n      return state;\n  }\n};\n","import React, { useCallback, useEffect, useReducer } from 'react';\nimport VisibilityDetector from 'react-visibility-detector';\n\nimport { getPosts } from '../../api';\nimport Post from '../Post';\nimport './index.css';\nimport { LOADING_DONE, LOADING_FAIL, LOADING_START, reducer } from './reducer';\n\nconst POSTS_COUNT = 10;\n\nconst PostsList = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    total: Infinity,\n    posts: [],\n    start: 0,\n    loading: false,\n  });\n  const { start, posts, loading, total } = state;\n\n  const loadMorePosts = useCallback(() => {\n    dispatch({ type: LOADING_START });\n\n    getPosts(start, POSTS_COUNT)\n      .then(res => {\n        dispatch({\n          type: LOADING_DONE,\n          payload: {\n            total: +res.headers['x-total-count'],\n            posts: [...posts, ...res.data],\n            start: start + POSTS_COUNT,\n          },\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch({ type: LOADING_FAIL });\n      });\n\n  }, [start, posts]);\n\n  const handleVisible = useCallback(({ visible, directionY }) => {\n    if (loading || !visible || directionY !== 'up') return;\n\n    loadMorePosts();\n  }, [loadMorePosts, loading]);\n\n  useEffect(() => {\n    loadMorePosts();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"posts-list\">\n      <h2>Пример реализации списка с подгрузкой данных по скроллу</h2>\n      <p>\n        Данные берутся с <a href=\"http://jsonplaceholder.typicode.com\">jsonplaceholder</a>\n      </p>\n      <p>\n        Подгрузка реализована с помощью <a href=\"https://github.com/behuamuh/react-visibility-detector\">компонента</a>\n      </p>\n      {posts.map(post => (\n        <Post key={post.id} post={post} className=\"posts-list__item\" />\n      ))}\n      {loading && '...loading'}\n      {total > posts.length && <VisibilityDetector onVisibilityChange={handleVisible} />}\n    </div>\n  );\n};\n\nexport default PostsList;\n","import React from 'react';\n\nimport PostsList from '../PostsList';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <PostsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}